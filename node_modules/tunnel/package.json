{
  "_args": [
    [
      {
        "raw": "tunnel@0.0.6",
        "scope": null,
        "escapedName": "tunnel",
        "name": "tunnel",
        "rawSpec": "0.0.6",
        "spec": "0.0.6",
        "type": "version"
      },
      "C:\\repos\\GitHubActions\\node_modules\\@actions\\http-client"
    ]
  ],
  "_from": "tunnel@0.0.6",
  "_hasShrinkwrap": false,
  "_id": "tunnel@0.0.6",
  "_location": "/tunnel",
  "_nodeVersion": "8.9.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/tunnel_0.0.6_1536647955409_0.11793783349404907"
  },
  "_npmUser": {
    "name": "koichik",
    "email": "koichik@improvement.jp"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "tunnel@0.0.6",
    "scope": null,
    "escapedName": "tunnel",
    "name": "tunnel",
    "rawSpec": "0.0.6",
    "spec": "0.0.6",
    "type": "version"
  },
  "_requiredBy": [
    "/@actions/http-client"
  ],
  "_resolved": "https://registry.npmjs.org/tunnel/-/tunnel-0.0.6.tgz",
  "_shasum": "72f1314b34a5b192db012324df2cc587ca47f92c",
  "_shrinkwrap": null,
  "_spec": "tunnel@0.0.6",
  "_where": "C:\\repos\\GitHubActions\\node_modules\\@actions\\http-client",
  "author": {
    "name": "Koichi Kobayashi",
    "email": "koichik@improvement.jp"
  },
  "bugs": {
    "url": "https://github.com/koichik/node-tunnel/issues"
  },
  "dependencies": {},
  "description": "Node HTTP/HTTPS Agents for tunneling proxies",
  "devDependencies": {
    "mocha": "^5.2.0",
    "should": "^13.2.3"
  },
  "directories": {
    "lib": "./lib"
  },
  "dist": {
    "integrity": "sha512-1h/Lnq9yajKY2PEbBadPXj3VxsDDu844OnaAo52UVmIzIvwwtBPIuNvkjuzBlTWpfJyUbG3ez0KSBibQkj4ojg==",
    "shasum": "72f1314b34a5b192db012324df2cc587ca47f92c",
    "tarball": "https://registry.npmjs.org/tunnel/-/tunnel-0.0.6.tgz",
    "fileCount": 12,
    "unpackedSize": 64886,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbl2MUCRA9TVsSAnZWagAAqrEP/R0MbYv1F8/sAQjUUaoN\n0pGj5gt19rpoAEFzYHLI7mYC+AwmNgDrptMbmbFTNbLNGBpV6jt3QguQgaaK\nnS4MgcdNVEQwCtibXqSLYDn39MIOspxlKK8Z+aquc53A77AyM1aZcmnmm59G\nb6JmKNBBvzrJtcwWjdk4RQbkL+KKXLjNNIe0wPTWnZx9Rk142M1/Vbhqyp5r\nqLYnu7vih+S9g4RHKLH+Invwil5se06B6c0Tp75tGN2EyenRdPJFiy5qVuVh\nyJmuvOJNLmw3+FHPuU4uEH3cjLyXY34zsrjvn8g9jVqdrkY/ZKKcw76cQgT5\nmCuWRh9t3bHeMD9o2qlaxKJTKk2NAVDUdu6Q+RdcuMMyoepi5fiYZjRtFTYp\nIO0co1wuYuNNVbigi/V4/QCKOXC5NRWkbbbR6qQOGHNJ0GEQQVmvyraRNQRJ\nJHvqzn8EQnXRwVZJ6zdM0/bAh6LanitSYs4OEh8Nk7+CMVm/ZkHpV0IpCW1/\njBaOHBHrCH9TaeVNDc17o56JkFPhQSU8WqKv6tMLTc7N8+CuEHX/11I5YGTC\nqa//6tZRlWU80Os0YtA78QgonrOzbP7bQvO+k/JMdDzfOykCllmF254ns5Su\nly617muU1zQqlB9FHFIdGGvaStPUKz2IJgYlC0J6JylVtnChnKX0I220VcsP\nQbyz\r\n=EsRp\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=0.6.11 <=0.7.0 || >=0.7.3"
  },
  "gitHead": "5fb2fb424788597146b7be6729006cad1cf9e9a8",
  "homepage": "https://github.com/koichik/node-tunnel/",
  "keywords": [
    "http",
    "https",
    "agent",
    "proxy",
    "tunnel"
  ],
  "license": "MIT",
  "main": "./index.js",
  "maintainers": [
    {
      "name": "koichik",
      "email": "koichik@improvement.jp"
    }
  ],
  "name": "tunnel",
  "optionalDependencies": {},
  "readme": "# node-tunnel - HTTP/HTTPS Agents for tunneling proxies\n\n[![Build Status](https://img.shields.io/travis/koichik/node-tunnel.svg?style=flat)](https://travis-ci.org/koichik/node-tunnel)\n[![Dependency Status](http://img.shields.io/david/koichik/node-tunnel.svg?style=flat)](https://david-dm.org/koichik/node-tunnel#info=dependencies)\n[![DevDependency Status](http://img.shields.io/david/dev/koichik/node-tunnel.svg?style=flat)](https://david-dm.org/koichik/node-tunnel#info=devDependencies)\n\n## Example\n\n```javascript\nvar tunnel = require('tunnel');\n\nvar tunnelingAgent = tunnel.httpsOverHttp({\n  proxy: {\n    host: 'localhost',\n    port: 3128\n  }\n});\n\nvar req = https.request({\n  host: 'example.com',\n  port: 443,\n  agent: tunnelingAgent\n});\n```\n\n## Installation\n\n    $ npm install tunnel\n\n## Usages\n\n### HTTP over HTTP tunneling\n\n```javascript\nvar tunnelingAgent = tunnel.httpOverHttp({\n  maxSockets: poolSize, // Defaults to http.Agent.defaultMaxSockets\n\n  proxy: { // Proxy settings\n    host: proxyHost, // Defaults to 'localhost'\n    port: proxyPort, // Defaults to 80\n    localAddress: localAddress, // Local interface if necessary\n\n    // Basic authorization for proxy server if necessary\n    proxyAuth: 'user:password',\n\n    // Header fields for proxy server if necessary\n    headers: {\n      'User-Agent': 'Node'\n    }\n  }\n});\n\nvar req = http.request({\n  host: 'example.com',\n  port: 80,\n  agent: tunnelingAgent\n});\n```\n\n### HTTPS over HTTP tunneling\n\n```javascript\nvar tunnelingAgent = tunnel.httpsOverHttp({\n  maxSockets: poolSize, // Defaults to http.Agent.defaultMaxSockets\n\n  // CA for origin server if necessary\n  ca: [ fs.readFileSync('origin-server-ca.pem')],\n\n  // Client certification for origin server if necessary\n  key: fs.readFileSync('origin-server-key.pem'),\n  cert: fs.readFileSync('origin-server-cert.pem'),\n\n  proxy: { // Proxy settings\n    host: proxyHost, // Defaults to 'localhost'\n    port: proxyPort, // Defaults to 80\n    localAddress: localAddress, // Local interface if necessary\n\n    // Basic authorization for proxy server if necessary\n    proxyAuth: 'user:password',\n\n    // Header fields for proxy server if necessary\n    headers: {\n      'User-Agent': 'Node'\n    },\n  }\n});\n\nvar req = https.request({\n  host: 'example.com',\n  port: 443,\n  agent: tunnelingAgent\n});\n```\n\n### HTTP over HTTPS tunneling\n\n```javascript\nvar tunnelingAgent = tunnel.httpOverHttps({\n  maxSockets: poolSize, // Defaults to http.Agent.defaultMaxSockets\n\n  proxy: { // Proxy settings\n    host: proxyHost, // Defaults to 'localhost'\n    port: proxyPort, // Defaults to 443\n    localAddress: localAddress, // Local interface if necessary\n\n    // Basic authorization for proxy server if necessary\n    proxyAuth: 'user:password',\n\n    // Header fields for proxy server if necessary\n    headers: {\n      'User-Agent': 'Node'\n    },\n\n    // CA for proxy server if necessary\n    ca: [ fs.readFileSync('origin-server-ca.pem')],\n\n    // Server name for verification if necessary\n    servername: 'example.com',\n\n    // Client certification for proxy server if necessary\n    key: fs.readFileSync('origin-server-key.pem'),\n    cert: fs.readFileSync('origin-server-cert.pem'),\n  }\n});\n\nvar req = http.request({\n  host: 'example.com',\n  port: 80,\n  agent: tunnelingAgent\n});\n```\n\n### HTTPS over HTTPS tunneling\n\n```javascript\nvar tunnelingAgent = tunnel.httpsOverHttps({\n  maxSockets: poolSize, // Defaults to http.Agent.defaultMaxSockets\n\n  // CA for origin server if necessary\n  ca: [ fs.readFileSync('origin-server-ca.pem')],\n\n  // Client certification for origin server if necessary\n  key: fs.readFileSync('origin-server-key.pem'),\n  cert: fs.readFileSync('origin-server-cert.pem'),\n\n  proxy: { // Proxy settings\n    host: proxyHost, // Defaults to 'localhost'\n    port: proxyPort, // Defaults to 443\n    localAddress: localAddress, // Local interface if necessary\n\n    // Basic authorization for proxy server if necessary\n    proxyAuth: 'user:password',\n\n    // Header fields for proxy server if necessary\n    headers: {\n      'User-Agent': 'Node'\n    }\n\n    // CA for proxy server if necessary\n    ca: [ fs.readFileSync('origin-server-ca.pem')],\n\n    // Server name for verification if necessary\n    servername: 'example.com',\n\n    // Client certification for proxy server if necessary\n    key: fs.readFileSync('origin-server-key.pem'),\n    cert: fs.readFileSync('origin-server-cert.pem'),\n  }\n});\n\nvar req = https.request({\n  host: 'example.com',\n  port: 443,\n  agent: tunnelingAgent\n});\n```\n\n## CONTRIBUTORS\n* [Aleksis Brezas (abresas)](https://github.com/abresas)\n* [Jackson Tian (JacksonTian)](https://github.com/JacksonTian)\n* [Dmitry Sorin (1999)](https://github.com/1999)\n\n## License\n\nLicensed under the [MIT](https://github.com/koichik/node-tunnel/blob/master/LICENSE) license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/koichik/node-tunnel.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "0.0.6"
}
